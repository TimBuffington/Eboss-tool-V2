import pandas as pd
# ... (existing imports)

# After calculating 'results'

# Prepare data for chart and table
fuel_data = []
for system_key, configs in results.items():
    for label, data in configs.items():
        config_name = f"{system_key} {label}"
        fuel_data.append({
            "Configuration": config_name,
            "GPH": data['total_gph'],
            "Gallons per Day": data['total_gph'] * 24,
            "Gallons per Week": data['total_gph'] * 24 * 7,
            "Gallons per Month": data['total_gph'] * 24 * 30,
            "Battery Life (hours)": data.get('battery_life', 'N/A'),
            "Charge Time per Unit (hours)": data.get('charge_time', 'N/A') if data.get('charge_time', float("inf")) != float("inf") else 'Insufficient',
            "Runtime (hours/day)": data['runtime_hrs'],
            "Units": data['units'],
            "Generators": data.get('generators', 'N/A'),
        })

df_fuel = pd.DataFrame(fuel_data)

# Line Graph Chart
st.markdown("### Fuel Consumption Line Graph")
metric = st.selectbox("Select metric", ["GPH", "Gallons per Day", "Gallons per Week", "Gallons per Month"])
df_plot = df_fuel.set_index("Configuration")[[metric]]
st.line_chart(df_plot)

# Side-by-Side Table Report
st.markdown("### Side-by-Side Comparison Table")
c1, c2, c3 = st.columns(3)
systems = list(results.keys())
if len(systems) > 0:
    with c1:
        st.markdown(f"#### {systems[0]}")
        st.table(df_fuel[df_fuel["Configuration"].str.contains(systems[0])][["Configuration", "GPH", "Gallons per Day", "Battery Life (hours)", "Charge Time per Unit (hours)", "Runtime (hours/day)"]])
if len(systems) > 1:
    with c2:
        st.markdown(f"#### {systems[1]}")
        st.table(df_fuel[df_fuel["Configuration"].str.contains(systems[1])][["Configuration", "GPH", "Gallons per Day", "Battery Life (hours)", "Charge Time per Unit (hours)", "Runtime (hours/day)"]])
if len(systems) > 2:
    with c3:
        st.markdown(f"#### {systems[2]}")
        st.table(df_fuel[df_fuel["Configuration"].str.contains(systems[2])][["Configuration", "GPH", "Gallons per Day", "Battery Life (hours)", "Charge Time per Unit (hours)", "Runtime (hours/day)"]])
